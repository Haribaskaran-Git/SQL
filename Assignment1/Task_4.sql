select * from customers;
select * from orders;
select * from orderdetails;
select * from products;
select * from inventory;
-- Write an SQL query to find out which customers have not placed any orders.
select firstname , customerid from customers where customerid <> all(select customerid from orders);

-- Write an SQL query to find the total number of products available for sale. 
select sum(Quantityinstock) Total from inventory;

-- Write an SQL query to calculate the total revenue generated by TechShop. 
select sum(totalamount)from orders;

-- Write an SQL query to calculate the average quantity ordered for products in a specific category. Allow users to input the category name as a parameter.
select avg(od.Quantity) Aas avgquantityordered
from OrderDetails od
where od.ProductID in (
    select p.ProductID
    from Products p
    where p.Category = 'Electronics' 
);


-- Write an SQL query to calculate the total revenue generated by a specific customer. Allow users to input the customer ID as a parameter

select customerid , sum(totalamount) from orders where CustomerId = any (select customerid from customers )
group by customerid;

-- Write an SQL query to find the customers who have placed the most orders. List their names and the number of orders they've placed.
select customerid ,count(*) from orders where customerid = any (select customerid from customers)
group by customerid;



-- Write an SQL query to find the most popular product category, which is the one with the highest total quantity ordered across all orders.
select products.ProductName , orderdetails.quantity
from products inner join orderdetails
on products.ProductId = orderdetails.ProductID
where orderdetails.quantity = (select max(orderdetails.quantity) from orderdetails);

-- Write an SQL query to find the customer who has spent the most money (highest total revenue) on electronic gadgets. List their name and total spending
SELECT customers.FirstName,customers.LastName,orders.totalAmount AS TotalRevenue
FROM Orders JOIN Customers 
ON orders.CustomerID = customers.CustomerID
WHERE orders.totalAmount = (SELECT MAX(totalAmount) FROM Orders);



-- Write an SQL query to calculate the average order value (total revenue divided by the number of orders) for all customers
select customers.firstname,customers.lastname,avg(totalamount)
from customers inner join orders
on customers.customerid = orders.customerId
group by customers.customerId;

-- Write an SQL query to find the total number of orders placed by each customer and list their names along with the order count
select c.FirstName, c.LastName, o.order_count
from Customers c
join (
    select CustomerId, COUNT(*) as order_count
    from Orders
    group by CustomerId
) as o on c.CustomerId = o.CustomerId;

